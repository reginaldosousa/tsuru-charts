# Default values for tsuru-stack.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

tsuru-api:
  nameOverride: api

  service:
    type: LoadBalancer
    httpPort: 80
    httpsOnly: false
    targetHTTPPort: 8080

  indexPageTemplate: "<html><head></head><body><h1>Hello!</h1></body></html>"

  tsuruConfig:
    host: "http://tsuru-api.tsuru-system.svc.cluster.local" # requires that we always install into tsuru-system namespace
    useTLS: false

    database:
      mongodbURL: "mongodb://tsuru:tsuru@tsuru-mongodb/tsuru"

    auth:
      scheme: "native"
      native:
        tokenExpire: 2
        hashCost: 4

    queue:
      mongodbURL: "mongodb://tsuru:tsuru@tsuru-mongodb/tsuru"

    provisioner: "kubernetes"

    clusters:
      defaults:
        build-service-address: "dns:///tsuru-deploy-agent:80"
        registry-insecure: "true"
        registry: "tsuru-registry.tsuru-system.svc.cluster.local"
        build-service-tls: "false"
        disable-default-node-selector: "true"
        job-event-creation: "false"

    docker:
      registry: tsuru-registry:80
      resolve-registry-name: true
      gc:
        dry-run: false
      router: ingress-router
      cluster:
        storage: mongodb
        mongo-url: "mongodb://tsuru:tsuru@tsuru-mongodb/tsuru"
        mongo-database: tsuru

    routers:
      ingress-router:
        type: api
        api-url: http://tsuru-kubernetes-router/api/ingress-nginx
        headers:
          Authorization: "Basic YWRtaW46bXlwYXNzd29yZA=="

    log:
      disableSyslog: true

    debug: true

kubernetes-router:
  service:
    type: ClusterIP
  controllerModes:
    - ingress-nginx
  ingressExpose:
    domain: cloud.127.0.0.1.nip.io
    port: 8890

  api:
    username: "admin"
    password: "mypassword"

mongodb:
  enabled: true
  image:
    repository: mongo
    tag: 6.0.9
  extraEnvVars:
    - name: MONGO_INITDB_ROOT_USERNAME
      value: "root"
    - name: MONGO_INITDB_ROOT_PASSWORD
      value: "tsuru"
    - name: MONGO_INITDB_DATABASE
      value: "tsuru"
  auth:
    rootPassword: tsuru
    rootUser: root
    usernames:
      - tsuru
    passwords:
      - tsuru
    databases:
      - tsuru
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  persistence:
    mountPath: "/data/db"
  initdbScripts:
    init_tsuru_script.js: |
      db.createUser(
        {
            user: "tsuru",
            pwd: "tsuru",
            roles: [
                {
                    role: "readWrite",
                    db: "tsuru"
                }
            ]
        }
      );

monitoring:
  enabled: false

ingress-nginx:
  enabled: true
  ingressClass: tsuru-nginx

certManager:
  enabled: false

registry:
  enabled: true

  # set the type of filesystem to use: filesystem, s3
  storage: filesystem

  service:
    port: 80

  configData:
    version: 0.1
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3

deploy-agent:
  buildkit:
    config: |
      # Buildkitd config file
      # https://github.com/moby/buildkit/blob/master/docs/buildkitd.toml.md

      [grpc]
        address = [
          "tcp://0.0.0.0:8081",
          "unix:///run/buildkit/buildkitd.sock",
        ]

      [worker.containerd]
        enabled = false

      [worker.oci]
        enabled = true
        gc = false

        # NOTE: Force x86_64 arch as Tsuru doesn't support different ones yet.
        platforms = [
          "linux/amd64"
        ]

      [registry."tsuru-registry.tsuru-system.svc.cluster.local"]
        http = true

      # vim: ft=toml

registryAliases:
  enabled: false
